2021-07-01 15:54:19.049 ERROR 15808 --- [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'logging.level' to java.util.Map<java.lang.String, org.springframework.boot.logging.LogLevel>:

    Reason: org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.lang.String] to type [java.util.Map<java.lang.String, org.springframework.boot.logging.LogLevel>]

Action:

Update your application's configuration

2021-07-01 15:54:45.265  INFO 20108 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 20108 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 15:54:45.267  INFO 20108 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 15:54:45.772  INFO 20108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 15:54:45.773  INFO 20108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 15:54:45.787  INFO 20108 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2021-07-01 15:54:46.079  INFO 20108 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 15:54:46.085  INFO 20108 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 15:54:46.085  INFO 20108 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 15:54:46.129  INFO 20108 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 15:54:46.129  INFO 20108 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 830 ms
2021-07-01 15:54:46.220  WARN 20108 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'indexController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockOrderService': Unsatisfied dependency expressed through field 'stockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockService': Unsatisfied dependency expressed through field 'stockDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
2021-07-01 15:54:46.221  INFO 20108 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 15:54:46.232  INFO 20108 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 15:54:46.245 ERROR 20108 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'indexController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockOrderService': Unsatisfied dependency expressed through field 'stockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockService': Unsatisfied dependency expressed through field 'stockDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockOrderService': Unsatisfied dependency expressed through field 'stockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockService': Unsatisfied dependency expressed through field 'stockDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockService': Unsatisfied dependency expressed through field 'stockDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.8.jar:5.3.8]
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1516) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1399) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.8.jar:5.3.8]
	... 48 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1501) ~[spring-beans-5.3.8.jar:5.3.8]
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.8.jar:5.3.8]
	... 72 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 86 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder.bind(DruidDataSourceBuilder.java:48) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder.build(DruidDataSourceBuilder.java:41) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:44) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$59e45683.CGLIB$dataSource$0(<generated>) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$59e45683$$FastClassBySpringCGLIB$$3c02825b.invoke(<generated>) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.3.8.jar:5.3.8]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-5.3.8.jar:5.3.8]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$59e45683.dataSource(<generated>) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 87 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.bind.RelaxedDataBinder
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 100 common frames omitted

2021-07-01 15:56:04.989  INFO 33544 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 33544 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 15:56:04.991  INFO 33544 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 15:56:05.369  INFO 33544 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 15:56:05.370  INFO 33544 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 15:56:05.383  INFO 33544 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 15:56:05.672  INFO 33544 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 15:56:05.678  INFO 33544 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 15:56:05.678  INFO 33544 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 15:56:05.725  INFO 33544 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 15:56:05.726  INFO 33544 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 705 ms
2021-07-01 15:56:05.818  WARN 33544 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'indexController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockOrderService': Unsatisfied dependency expressed through field 'stockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockService': Unsatisfied dependency expressed through field 'stockDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
2021-07-01 15:56:05.820  INFO 33544 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 15:56:05.831  INFO 33544 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 15:56:05.843 ERROR 33544 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'indexController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockOrderService': Unsatisfied dependency expressed through field 'stockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockService': Unsatisfied dependency expressed through field 'stockDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockOrderService': Unsatisfied dependency expressed through field 'stockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockService': Unsatisfied dependency expressed through field 'stockDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockService': Unsatisfied dependency expressed through field 'stockDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.8.jar:5.3.8]
	... 34 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'stockDao' defined in file [D:\bs\github\seconds-kill-demo\target\classes\com\lyf\dao\StockDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1516) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1399) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657) ~[spring-beans-5.3.8.jar:5.3.8]
	... 48 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1501) ~[spring-beans-5.3.8.jar:5.3.8]
	... 59 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791) ~[spring-beans-5.3.8.jar:5.3.8]
	... 72 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 86 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/springframework/boot/bind/RelaxedDataBinder
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder.bind(DruidDataSourceBuilder.java:48) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder.build(DruidDataSourceBuilder.java:41) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource(DruidDataSourceAutoConfigure.java:44) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$97cf7d6c.CGLIB$dataSource$0(<generated>) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$97cf7d6c$$FastClassBySpringCGLIB$$71133aa7.invoke(<generated>) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.3.8.jar:5.3.8]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-5.3.8.jar:5.3.8]
	at com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$97cf7d6c.dataSource(<generated>) ~[druid-spring-boot-starter-1.1.0.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 87 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.springframework.boot.bind.RelaxedDataBinder
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 100 common frames omitted

2021-07-01 15:56:29.140  INFO 38788 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 38788 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 15:56:29.142  INFO 38788 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 15:56:29.520  INFO 38788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 15:56:29.521  INFO 38788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 15:56:29.533  INFO 38788 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 15:56:29.825  INFO 38788 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 15:56:29.831  INFO 38788 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 15:56:29.831  INFO 38788 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 15:56:29.876  INFO 38788 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 15:56:29.876  INFO 38788 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 707 ms
2021-07-01 15:56:30.306  WARN 38788 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
2021-07-01 15:56:30.308  INFO 38788 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 15:56:30.309  INFO 38788 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 15:56:30.320  INFO 38788 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 15:56:30.332 ERROR 38788 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.data.redis.connection.jedis.JedisConverters.toBytes(JedisConverters.java:229) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConverters.<clinit>(JedisConverters.java:106) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<clinit>(JedisConnectionFactory.java:93) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.util.SafeEncoder
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 30 common frames omitted

2021-07-01 15:58:11.363  INFO 22912 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 22912 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 15:58:11.365  INFO 22912 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 15:58:11.751  INFO 22912 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 15:58:11.752  INFO 22912 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 15:58:11.764  INFO 22912 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 15:58:12.043  INFO 22912 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 15:58:12.049  INFO 22912 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 15:58:12.049  INFO 22912 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 15:58:12.089  INFO 22912 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 15:58:12.089  INFO 22912 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 696 ms
2021-07-01 15:58:12.475  WARN 22912 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
2021-07-01 15:58:12.476  INFO 22912 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 15:58:12.478  INFO 22912 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 15:58:12.488  INFO 22912 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 15:58:12.500 ERROR 22912 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<init>(JedisConnectionFactory.java:97) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<init>(JedisConnectionFactory.java:232) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.DefaultJedisClientConfig
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 29 common frames omitted

2021-07-01 15:58:39.807  INFO 5620 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 5620 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 15:58:39.809  INFO 5620 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 15:58:40.175  INFO 5620 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 15:58:40.176  INFO 5620 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 15:58:40.189  INFO 5620 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 15:58:40.463  INFO 5620 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 15:58:40.468  INFO 5620 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 15:58:40.468  INFO 5620 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 15:58:40.510  INFO 5620 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 15:58:40.510  INFO 5620 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 675 ms
2021-07-01 15:58:40.895  WARN 5620 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
2021-07-01 15:58:40.897  INFO 5620 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 15:58:40.898  INFO 5620 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 15:58:40.909  INFO 5620 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 15:58:40.920 ERROR 5620 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<init>(JedisConnectionFactory.java:97) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<init>(JedisConnectionFactory.java:232) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.DefaultJedisClientConfig
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 29 common frames omitted

2021-07-01 16:00:06.894  INFO 1652 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 1652 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:00:06.896  INFO 1652 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:00:07.275  INFO 1652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:00:07.276  INFO 1652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:00:07.288  INFO 1652 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 16:00:07.566  INFO 1652 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:00:07.571  INFO 1652 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:00:07.572  INFO 1652 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 16:00:07.613  INFO 1652 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:00:07.613  INFO 1652 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 692 ms
2021-07-01 16:00:08.007  WARN 1652 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
2021-07-01 16:00:08.008  INFO 1652 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 16:00:08.010  INFO 1652 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 16:00:08.021  INFO 1652 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 16:00:08.033 ERROR 1652 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.data.redis.connection.jedis.JedisConverters.toBytes(JedisConverters.java:229) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConverters.<clinit>(JedisConverters.java:106) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<clinit>(JedisConnectionFactory.java:93) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.util.SafeEncoder
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 30 common frames omitted

2021-07-01 16:00:31.477  INFO 7600 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 7600 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:00:31.478  INFO 7600 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:00:31.842  INFO 7600 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:00:31.843  INFO 7600 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:00:31.855  INFO 7600 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 16:00:32.138  INFO 7600 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:00:32.143  INFO 7600 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:00:32.143  INFO 7600 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 16:00:32.185  INFO 7600 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:00:32.185  INFO 7600 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 681 ms
2021-07-01 16:00:32.592  WARN 7600 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
2021-07-01 16:00:32.594  INFO 7600 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 16:00:32.595  INFO 7600 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 16:00:32.606  INFO 7600 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 16:00:32.617 ERROR 7600 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.data.redis.connection.jedis.JedisConverters.toBytes(JedisConverters.java:229) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConverters.<clinit>(JedisConverters.java:106) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<clinit>(JedisConnectionFactory.java:93) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.util.SafeEncoder
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 30 common frames omitted

2021-07-01 16:03:15.164  INFO 7032 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 7032 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:03:15.166  INFO 7032 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:03:15.565  INFO 7032 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:03:15.566  INFO 7032 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:03:15.578  INFO 7032 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 16:03:15.853  INFO 7032 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:03:15.858  INFO 7032 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:03:15.858  INFO 7032 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 16:03:15.899  INFO 7032 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:03:15.899  INFO 7032 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 707 ms
2021-07-01 16:03:16.288  WARN 7032 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
2021-07-01 16:03:16.289  INFO 7032 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 16:03:16.291  INFO 7032 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 16:03:16.301  INFO 7032 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 16:03:16.313 ERROR 7032 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<init>(JedisConnectionFactory.java:97) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<init>(JedisConnectionFactory.java:232) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.DefaultJedisClientConfig
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 29 common frames omitted

2021-07-01 16:04:00.011  INFO 44580 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 44580 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:04:00.013  INFO 44580 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:04:00.373  INFO 44580 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:04:00.374  INFO 44580 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:04:00.386  INFO 44580 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 16:04:00.657  INFO 44580 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:04:00.662  INFO 44580 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:04:00.663  INFO 44580 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 16:04:00.704  INFO 44580 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:04:00.704  INFO 44580 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 666 ms
2021-07-01 16:04:01.096  WARN 44580 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
2021-07-01 16:04:01.098  INFO 44580 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 16:04:01.099  INFO 44580 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 16:04:01.110  INFO 44580 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 16:04:01.121 ERROR 44580 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/DefaultJedisClientConfig
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<init>(JedisConnectionFactory.java:97) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<init>(JedisConnectionFactory.java:232) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.DefaultJedisClientConfig
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 29 common frames omitted

2021-07-01 16:12:09.680  INFO 28124 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 28124 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:12:09.681  INFO 28124 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:12:10.085  INFO 28124 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:12:10.086  INFO 28124 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:12:10.099  INFO 28124 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 16:12:10.379  INFO 28124 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:12:10.384  INFO 28124 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:12:10.385  INFO 28124 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 16:12:10.426  INFO 28124 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:12:10.426  INFO 28124 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 716 ms
2021-07-01 16:12:10.819  WARN 28124 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
2021-07-01 16:12:10.820  INFO 28124 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 16:12:10.822  INFO 28124 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 16:12:10.833  INFO 28124 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 16:12:10.844 ERROR 28124 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.data.redis.connection.jedis.JedisConverters.toBytes(JedisConverters.java:229) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConverters.<clinit>(JedisConverters.java:106) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<clinit>(JedisConnectionFactory.java:93) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.util.SafeEncoder
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 30 common frames omitted

2021-07-01 16:21:45.734  INFO 47916 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication using Java 1.8.0_191 on wh-code-pc0283 with PID 47916 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:21:45.736  INFO 47916 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:21:46.107  INFO 47916 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:21:46.108  INFO 47916 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:21:46.121  INFO 47916 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2021-07-01 16:21:46.402  INFO 47916 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:21:46.407  INFO 47916 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:21:46.407  INFO 47916 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.48]
2021-07-01 16:21:46.448  INFO 47916 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:21:46.449  INFO 47916 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 688 ms
2021-07-01 16:21:46.474  INFO 47916 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : Autowired annotation is not supported on static fields: public static redis.clients.jedis.JedisPool com.lyf.config.RedisConfig.pool
2021-07-01 16:21:46.849  WARN 47916 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
2021-07-01 16:21:46.851  INFO 47916 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-0} closing ...
2021-07-01 16:21:46.852  INFO 47916 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-01 16:21:46.862  INFO 47916 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-01 16:21:46.874 ERROR 47916 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.8.jar:5.3.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.2.jar:2.5.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.2.jar:2.5.2]
	at com.lyf.SecondsKillDemoApplication.main(SecondsKillDemoApplication.java:16) [classes/:na]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'redisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.3.8.jar:5.3.8]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653) ~[spring-beans-5.3.8.jar:5.3.8]
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/util/SafeEncoder
	at org.springframework.data.redis.connection.jedis.JedisConverters.toBytes(JedisConverters.java:229) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConverters.<clinit>(JedisConverters.java:106) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<clinit>(JedisConnectionFactory.java:93) ~[spring-data-redis-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.createJedisConnectionFactory(JedisConnectionConfiguration.java:72) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.redisConnectionFactory(JedisConnectionConfiguration.java:60) ~[spring-boot-autoconfigure-2.5.2.jar:2.5.2]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.3.8.jar:5.3.8]
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.util.SafeEncoder
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_191]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_191]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_191]
	... 30 common frames omitted

2021-07-01 16:23:45.871  INFO 45676 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 45676 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:23:45.873  INFO 45676 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:23:46.574  INFO 45676 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:23:46.576  INFO 45676 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:23:46.587  INFO 45676 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2021-07-01 16:23:47.020  INFO 45676 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:23:47.026  INFO 45676 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:23:47.027  INFO 45676 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:23:47.083  INFO 45676 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:23:47.084  INFO 45676 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1177 ms
2021-07-01 16:23:47.121  INFO 45676 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : Autowired annotation is not supported on static fields: public static redis.clients.jedis.JedisPool com.lyf.config.RedisConfig.pool
2021-07-01 16:23:47.414  INFO 45676 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:23:47.772  INFO 45676 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:23:47.792  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:23:47.792  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:23:47.792  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625127827791
2021-07-01 16:23:47.902  INFO 45676 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:23:47.915  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:23:47.915  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:23:47.915  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625127827915
2021-07-01 16:23:47.916  INFO 45676 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:23:47.916  INFO 45676 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:23:47.929  INFO 45676 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:23:47.933  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:23:47.933  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:23:47.933  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625127827933
2021-07-01 16:23:47.933  INFO 45676 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:23:47.933  INFO 45676 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:23:47.934  INFO 45676 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:23:47.937  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:23:47.937  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:23:47.938  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:23:47.938  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:23:47.938  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:23:47.938  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:23:47.938  INFO 45676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625127827938
2021-07-01 16:23:47.938  INFO 45676 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:23:47.939  INFO 45676 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:23:47.939  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:23:47.939  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:23:47.940  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:23:47.940  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:23:47.940  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:23:47.940  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:23:47.942  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:23:47.942  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:23:47.943  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:23:47.943  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:23:47.943  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:23:47.949  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:23:47.949  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:23:47.949  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:23:47.957  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 29
2021-07-01 16:23:47.957  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 29
2021-07-01 16:23:47.957  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:23:47.958  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 29
2021-07-01 16:23:47.958  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:23:47.959  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:23:47.959  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:23:47.959  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:23:47.963  INFO 45676 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:23:47.964  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=110, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:23:47.965  INFO 45676 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 2.454 seconds (JVM running for 2.972)
2021-07-01 16:23:47.968  INFO 45676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:24:55.308  INFO 17040 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 17040 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:24:55.310  INFO 17040 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:24:55.681  INFO 17040 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:24:55.683  INFO 17040 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:24:55.694  INFO 17040 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2021-07-01 16:24:55.962  INFO 17040 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:24:55.967  INFO 17040 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:24:55.967  INFO 17040 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:24:56.014  INFO 17040 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:24:56.014  INFO 17040 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 672 ms
2021-07-01 16:24:56.276  INFO 17040 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:24:56.516  INFO 17040 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:24:56.536  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:24:56.536  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:24:56.536  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625127896536
2021-07-01 16:24:56.614  INFO 17040 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:24:56.627  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:24:56.627  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:24:56.627  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625127896627
2021-07-01 16:24:56.628  INFO 17040 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:24:56.629  INFO 17040 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:24:56.631  INFO 17040 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:24:56.635  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:24:56.635  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:24:56.635  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625127896635
2021-07-01 16:24:56.636  INFO 17040 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:24:56.636  INFO 17040 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:24:56.636  INFO 17040 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:24:56.640  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:24:56.640  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:24:56.640  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:24:56.640  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:24:56.640  INFO 17040 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625127896640
2021-07-01 16:24:56.640  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:24:56.640  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:24:56.640  INFO 17040 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:24:56.641  INFO 17040 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:24:56.642  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:24:56.642  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:24:56.642  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:24:56.642  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:24:56.642  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:24:56.642  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:24:56.644  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:24:56.644  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:24:56.644  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:24:56.645  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:24:56.645  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:24:56.647  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:24:56.647  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:24:56.647  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:24:56.654  INFO 17040 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:24:56.656  INFO 17040 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.592 seconds (JVM running for 1.949)
2021-07-01 16:25:00.984  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 30
2021-07-01 16:25:00.984  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 30
2021-07-01 16:25:00.984  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 30
2021-07-01 16:25:00.984  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:25:00.984  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:25:00.985  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:25:00.985  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:25:00.986  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:25:00.990  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=110, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:25:00.996  INFO 17040 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:27:02.016  INFO 17040 --- [http-nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:27:02.017  INFO 17040 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:27:02.021  INFO 17040 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2021-07-01 16:27:02.124  INFO 17040 --- [http-nio-8090-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:27:02.181 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:02.184 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:02.184  INFO 17040 --- [Druid-ConnectionPool-Create-1699783072] c.a.druid.pool.DruidAbstractDataSource   : {dataSource-1} failContinuous is true
2021-07-01 16:27:02.686 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:03.188 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:03.691 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:04.193 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:04.697 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:05.199 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:05.702 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:06.204 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:06.707 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:07.210 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:07.712 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:08.215 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:08.718 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:09.221 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:09.723 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:10.226 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:10.730 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:11.234 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:11.737 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:12.240 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:12.742 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:13.245 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:13.748 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:14.250 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:27:14.753 ERROR 17040 --- [Druid-ConnectionPool-Create-1699783072] com.alibaba.druid.pool.DruidDataSource   : create connection SQLException, url: jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8, errorCode 0, state 01S00

java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:76) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710) ~[druid-1.1.23.jar:1.1.23]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774) ~[druid-1.1.23.jar:1.1.23]
Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.GeneratedConstructorAccessor32.newInstance(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_191]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_191]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:132) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.configureTimezone(NativeProtocol.java:2118) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.protocol.a.NativeProtocol.initServerSession(NativeProtocol.java:2142) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:1310) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:967) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	... 6 common frames omitted

2021-07-01 16:28:08.801  INFO 48676 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 48676 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:28:08.802  INFO 48676 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:28:09.161  INFO 48676 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:28:09.162  INFO 48676 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:28:09.174  INFO 48676 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2021-07-01 16:28:09.441  INFO 48676 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:28:09.447  INFO 48676 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:28:09.447  INFO 48676 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:28:09.495  INFO 48676 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:28:09.496  INFO 48676 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 668 ms
2021-07-01 16:28:09.761  INFO 48676 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:28:10.006  INFO 48676 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:28:10.028  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:28:10.028  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:28:10.028  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128090027
2021-07-01 16:28:10.110  INFO 48676 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:28:10.123  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:28:10.123  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:28:10.123  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128090123
2021-07-01 16:28:10.124  INFO 48676 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:28:10.125  INFO 48676 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:28:10.127  INFO 48676 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:28:10.130  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:28:10.130  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:28:10.130  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128090130
2021-07-01 16:28:10.131  INFO 48676 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:28:10.131  INFO 48676 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:28:10.131  INFO 48676 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:28:10.134  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:28:10.134  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:28:10.134  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:28:10.134  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:28:10.134  INFO 48676 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128090134
2021-07-01 16:28:10.135  INFO 48676 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:28:10.135  INFO 48676 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:28:10.135  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:28:10.135  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:28:10.136  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:28:10.136  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:28:10.136  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:28:10.136  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:28:10.136  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:10.136  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:10.137  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:28:10.138  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:28:10.138  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:28:10.138  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:28:10.138  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:10.141  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:10.141  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:10.141  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:10.146  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 32
2021-07-01 16:28:10.146  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 32
2021-07-01 16:28:10.146  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 32
2021-07-01 16:28:10.146  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:28:10.146  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:28:10.147  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:28:10.147  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:28:10.147  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:28:10.149  INFO 48676 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:28:10.150  INFO 48676 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.578 seconds (JVM running for 1.918)
2021-07-01 16:28:10.151  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=110, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:28:10.153  INFO 48676 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:28:23.250  INFO 48676 --- [http-nio-8090-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:28:23.250  INFO 48676 --- [http-nio-8090-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:28:23.254  INFO 48676 --- [http-nio-8090-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2021-07-01 16:28:23.314  INFO 48676 --- [http-nio-8090-exec-3] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:28:23.570  INFO 48676 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : 重置数据库和缓存成功！
2021-07-01 16:28:49.394  INFO 20740 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 20740 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:28:49.395  INFO 20740 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:28:49.741  INFO 20740 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:28:49.742  INFO 20740 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:28:49.754  INFO 20740 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2021-07-01 16:28:50.018  INFO 20740 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:28:50.024  INFO 20740 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:28:50.024  INFO 20740 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:28:50.069  INFO 20740 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:28:50.069  INFO 20740 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 649 ms
2021-07-01 16:28:50.331  INFO 20740 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:28:50.572  INFO 20740 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:28:50.592  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:28:50.592  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:28:50.592  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128130591
2021-07-01 16:28:50.674  INFO 20740 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:28:50.687  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:28:50.688  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:28:50.688  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128130687
2021-07-01 16:28:50.688  INFO 20740 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:28:50.689  INFO 20740 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:28:50.691  INFO 20740 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:28:50.695  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:28:50.695  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:28:50.695  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128130695
2021-07-01 16:28:50.696  INFO 20740 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:28:50.696  INFO 20740 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:28:50.697  INFO 20740 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:28:50.700  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:28:50.700  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:28:50.700  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:28:50.700  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:28:50.700  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:28:50.700  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:28:50.701  INFO 20740 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128130700
2021-07-01 16:28:50.701  INFO 20740 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:28:50.701  INFO 20740 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:28:50.701  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:28:50.701  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:28:50.702  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:28:50.702  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:28:50.702  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:50.702  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:50.703  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:28:50.704  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:28:50.704  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:28:50.705  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:28:50.705  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:50.707  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:50.707  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:50.707  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:28:50.715  INFO 20740 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:28:50.717  INFO 20740 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.538 seconds (JVM running for 1.865)
2021-07-01 16:28:56.161  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 33
2021-07-01 16:28:56.161  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 33
2021-07-01 16:28:56.161  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 33
2021-07-01 16:28:56.162  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:28:56.162  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:28:56.163  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:28:56.163  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:28:56.164  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:28:56.167  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=110, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:28:56.170  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:29:20.189  INFO 20740 --- [http-nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:29:20.189  INFO 20740 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:29:20.193  INFO 20740 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2021-07-01 16:29:20.259  INFO 20740 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:20.259  INFO 20740 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:20.259  INFO 20740 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:20.259  INFO 20740 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:20.282  INFO 20740 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:20.287  INFO 20740 --- [http-nio-8090-exec-2] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:29:20.354  INFO 20740 --- [http-nio-8090-exec-3] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2021-07-01 16:29:20.363  INFO 20740 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:29:20.363  INFO 20740 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:29:20.364  INFO 20740 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128160363
2021-07-01 16:29:20.367  INFO 20740 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:29:20.374  INFO 20740 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:20.374  INFO 20740 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:20.374  INFO 20740 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:20.374  INFO 20740 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:20.374  INFO 20740 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:20.422  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:20.489 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 111, CreateTime = 1625128160371, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":50,"sale":0,"version":0})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:20.490 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 112, CreateTime = 1625128160371, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":50,"sale":0,"version":0})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:20.492 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 113, CreateTime = 1625128160371, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":50,"sale":0,"version":0})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:20.493 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 114, CreateTime = 1625128160371, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":50,"sale":0,"version":0})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:21.007  INFO 20740 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:21.008  INFO 20740 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:21.010  INFO 20740 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:21.011  INFO 20740 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:21.013  INFO 20740 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:21.013  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:21.014  INFO 20740 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:21.016  INFO 20740 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:21.016  INFO 20740 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:21.018  INFO 20740 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:21.019  INFO 20740 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:21.089 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 116, CreateTime = 1625128161011, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":49,"sale":1,"version":1})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:21.090  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:21.138 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 118, CreateTime = 1625128161016, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":48,"sale":2,"version":2})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:21.141 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 119, CreateTime = 1625128161019, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":48,"sale":2,"version":2})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:22.000  INFO 20740 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:22.001  INFO 20740 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:22.002  INFO 20740 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:22.003  INFO 20740 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:22.004  INFO 20740 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:22.005  INFO 20740 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:22.006  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:22.006  INFO 20740 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:22.006  INFO 20740 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:22.007  INFO 20740 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:22.008  INFO 20740 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:22.062 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 121, CreateTime = 1625128162003, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":47,"sale":3,"version":3})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:22.064  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:22.093 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 123, CreateTime = 1625128162006, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":46,"sale":4,"version":4})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:22.094 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 124, CreateTime = 1625128162008, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":46,"sale":4,"version":4})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:23.020  INFO 20740 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:23.021  INFO 20740 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:23.023  INFO 20740 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:23.024  INFO 20740 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:23.026  INFO 20740 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:23.027  INFO 20740 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:23.028  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:23.029  INFO 20740 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:23.030  INFO 20740 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:23.031  INFO 20740 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:23.032  INFO 20740 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:23.085 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 126, CreateTime = 1625128163024, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":45,"sale":5,"version":5})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:23.087 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 127, CreateTime = 1625128163026, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":45,"sale":5,"version":5})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:23.088  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:23.117 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 129, CreateTime = 1625128163032, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":44,"sale":6,"version":6})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:24.009  INFO 20740 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:24.010  INFO 20740 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:24.011  INFO 20740 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:24.012  INFO 20740 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:24.013  INFO 20740 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:24.014  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:24.014  INFO 20740 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:24.014  INFO 20740 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:24.015  INFO 20740 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:24.016  INFO 20740 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:24.016  INFO 20740 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:24.065 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 131, CreateTime = 1625128164012, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":43,"sale":7,"version":7})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:24.066  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:24.097 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 133, CreateTime = 1625128164015, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":42,"sale":8,"version":8})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:24.098 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 134, CreateTime = 1625128164016, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":42,"sale":8,"version":8})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:25.001  INFO 20740 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:25.001  INFO 20740 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:25.003  INFO 20740 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:25.003  INFO 20740 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:25.005  INFO 20740 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:25.005  INFO 20740 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:25.006  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:25.006  INFO 20740 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:25.007  INFO 20740 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:25.008  INFO 20740 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:25.009  INFO 20740 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:25.055 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 136, CreateTime = 1625128165003, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":41,"sale":9,"version":9})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:25.056  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:25.087 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 138, CreateTime = 1625128165007, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":40,"sale":10,"version":10})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:25.088 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 139, CreateTime = 1625128165009, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":40,"sale":10,"version":10})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:26.000  INFO 20740 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:26.001  INFO 20740 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:26.002  INFO 20740 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:26.002  INFO 20740 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:26.004  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:26.022  INFO 20740 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:26.023  INFO 20740 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:26.024  INFO 20740 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:26.024  INFO 20740 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:26.025  INFO 20740 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:26.025  INFO 20740 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:26.051 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 141, CreateTime = 1625128166002, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":39,"sale":11,"version":11})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:26.053  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:26.084 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 143, CreateTime = 1625128166024, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":38,"sale":12,"version":12})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:26.085 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 144, CreateTime = 1625128166025, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":38,"sale":12,"version":12})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:27.013  INFO 20740 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:27.014  INFO 20740 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:27.015  INFO 20740 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:27.016  INFO 20740 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:27.018  INFO 20740 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:27.018  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:27.018  INFO 20740 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:27.019  INFO 20740 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:27.020  INFO 20740 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:27.020  INFO 20740 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:27.021  INFO 20740 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:27.065 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 146, CreateTime = 1625128167016, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":37,"sale":13,"version":13})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:27.067  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:27.089 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 148, CreateTime = 1625128167020, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":36,"sale":14,"version":14})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:27.091 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 149, CreateTime = 1625128167021, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":36,"sale":14,"version":14})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:28.003  INFO 20740 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:28.004  INFO 20740 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:28.005  INFO 20740 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:28.006  INFO 20740 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:28.007  INFO 20740 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:28.008  INFO 20740 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:28.010  INFO 20740 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:28.010  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:28.011  INFO 20740 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:28.014  INFO 20740 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:28.014  INFO 20740 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:28.048 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 151, CreateTime = 1625128168006, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":35,"sale":15,"version":15})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:28.050  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:28.113 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 153, CreateTime = 1625128168011, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":34,"sale":16,"version":16})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:28.114 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 154, CreateTime = 1625128168014, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":34,"sale":16,"version":16})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:29.000  INFO 20740 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:29.001  INFO 20740 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:29.002  INFO 20740 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:29.002  INFO 20740 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:29.003  INFO 20740 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:29.004  INFO 20740 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:29.004  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:29.005  INFO 20740 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:29.006  INFO 20740 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:29.007  INFO 20740 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:29.007  INFO 20740 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:29.066 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 156, CreateTime = 1625128169002, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":33,"sale":17,"version":17})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:29.068  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:29.093 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 158, CreateTime = 1625128169006, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":32,"sale":18,"version":18})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:29.096 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 159, CreateTime = 1625128169007, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":32,"sale":18,"version":18})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:30.015  INFO 20740 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:30.016  INFO 20740 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:30.017  INFO 20740 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:30.017  INFO 20740 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:30.018  INFO 20740 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:30.019  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:30.019  INFO 20740 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:30.020  INFO 20740 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:30.020  INFO 20740 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:30.021  INFO 20740 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:29:30.021  INFO 20740 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:29:30.084 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 161, CreateTime = 1625128170017, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":31,"sale":19,"version":19})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:30.085  INFO 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:29:30.115 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 163, CreateTime = 1625128170020, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":30,"sale":20,"version":20})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:29:30.116 ERROR 20740 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 164, CreateTime = 1625128170021, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":30,"sale":20,"version":20})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is java.lang.RuntimeException: 并发更新库存失败; nested exception is java.lang.RuntimeException: 并发更新库存失败
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: java.lang.RuntimeException: 并发更新库存失败
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:133) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:92) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy73.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:35:58.951  INFO 14984 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 14984 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:35:58.953  INFO 14984 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:35:59.351  INFO 14984 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:35:59.352  INFO 14984 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:35:59.365  INFO 14984 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2021-07-01 16:35:59.639  INFO 14984 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:35:59.644  INFO 14984 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:35:59.644  INFO 14984 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:35:59.688  INFO 14984 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:35:59.689  INFO 14984 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 711 ms
2021-07-01 16:35:59.944  INFO 14984 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:36:00.197  INFO 14984 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:36:00.217  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:36:00.217  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:36:00.217  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128560216
2021-07-01 16:36:00.297  INFO 14984 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:36:00.310  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:36:00.310  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:36:00.310  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128560310
2021-07-01 16:36:00.311  INFO 14984 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:36:00.311  INFO 14984 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:36:00.314  INFO 14984 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:36:00.318  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:36:00.318  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:36:00.318  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128560318
2021-07-01 16:36:00.318  INFO 14984 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:36:00.318  INFO 14984 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:36:00.319  INFO 14984 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:36:00.322  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:36:00.322  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:36:00.323  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:36:00.323  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:36:00.323  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:36:00.323  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:36:00.323  INFO 14984 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128560323
2021-07-01 16:36:00.323  INFO 14984 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:36:00.323  INFO 14984 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:36:00.324  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:36:00.324  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:36:00.324  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:36:00.324  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:36:00.324  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:36:00.324  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:36:00.326  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:36:00.326  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:36:00.327  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:36:00.327  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:36:00.327  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:36:00.329  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:36:00.329  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:36:00.329  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:36:00.337  INFO 14984 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:36:00.338  INFO 14984 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.603 seconds (JVM running for 1.961)
2021-07-01 16:36:04.870  INFO 14984 --- [http-nio-8090-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:36:04.871  INFO 14984 --- [http-nio-8090-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:36:04.874  INFO 14984 --- [http-nio-8090-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2021-07-01 16:36:04.905  INFO 14984 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:04.905  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:04.905  INFO 14984 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:04.930  INFO 14984 --- [http-nio-8090-exec-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:36:04.933  INFO 14984 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:04.966  INFO 14984 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:04.993  INFO 14984 --- [http-nio-8090-exec-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2021-07-01 16:36:05.002  INFO 14984 --- [http-nio-8090-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:36:05.002  INFO 14984 --- [http-nio-8090-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:36:05.002  INFO 14984 --- [http-nio-8090-exec-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128565002
2021-07-01 16:36:05.006  INFO 14984 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:36:05.014  INFO 14984 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.014  INFO 14984 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.014  INFO 14984 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.014  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.014  INFO 14984 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.016  INFO 14984 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:05.018  INFO 14984 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:05.018  INFO 14984 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:05.018  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:05.018  INFO 14984 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:05.019  INFO 14984 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.019  INFO 14984 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.019  INFO 14984 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.019  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:05.019  INFO 14984 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:06.020  INFO 14984 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:06.021  INFO 14984 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:06.022  INFO 14984 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:06.023  INFO 14984 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:06.024  INFO 14984 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:06.025  INFO 14984 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:06.026  INFO 14984 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:06.027  INFO 14984 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:06.028  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:06.029  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:06.256  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 34
2021-07-01 16:36:06.256  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 34
2021-07-01 16:36:06.256  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 34
2021-07-01 16:36:06.257  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:36:06.257  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:36:06.258  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:36:06.258  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:36:06.259  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:36:06.264  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=163, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:36:06.268  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:36:06.303 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 163, CreateTime = 1625128170020, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":30,"sale":20,"version":20})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.305 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 164, CreateTime = 1625128170021, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":30,"sale":20,"version":20})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.313  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:06.359 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 166, CreateTime = 1625128565010, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.360 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 167, CreateTime = 1625128565010, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.362 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 168, CreateTime = 1625128565010, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.364 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 169, CreateTime = 1625128565010, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.365 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 170, CreateTime = 1625128565019, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.366 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 171, CreateTime = 1625128565018, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.367 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 172, CreateTime = 1625128565017, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.368 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 173, CreateTime = 1625128565018, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.369 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 174, CreateTime = 1625128565018, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.370 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 175, CreateTime = 1625128566021, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.371 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 176, CreateTime = 1625128566023, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.372 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 177, CreateTime = 1625128566025, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.373 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 178, CreateTime = 1625128566027, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:06.375 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 179, CreateTime = 1625128566029, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:07.011  INFO 14984 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:07.012  INFO 14984 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:07.015  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:07.016  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:07.017  INFO 14984 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:07.018  INFO 14984 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:07.018  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:07.019  INFO 14984 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:07.019  INFO 14984 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:07.020  INFO 14984 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:07.021  INFO 14984 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:07.066 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 181, CreateTime = 1625128567016, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":28,"sale":22,"version":22})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:07.068  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:07.097 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 183, CreateTime = 1625128567019, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":27,"sale":23,"version":23})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:07.099 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 184, CreateTime = 1625128567021, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":27,"sale":23,"version":23})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:08.001  INFO 14984 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:08.002  INFO 14984 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:08.004  INFO 14984 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:08.005  INFO 14984 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:08.006  INFO 14984 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:08.007  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:08.007  INFO 14984 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:08.008  INFO 14984 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:08.008  INFO 14984 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:08.009  INFO 14984 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:08.010  INFO 14984 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:08.105 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 186, CreateTime = 1625128568005, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":26,"sale":24,"version":24})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:08.107  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:08.152 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 188, CreateTime = 1625128568008, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":25,"sale":25,"version":25})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:08.153 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 189, CreateTime = 1625128568010, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":25,"sale":25,"version":25})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:09.000  INFO 14984 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:09.000  INFO 14984 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:09.001  INFO 14984 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:09.002  INFO 14984 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:09.002  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:09.003  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:09.003  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:09.004  INFO 14984 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:09.004  INFO 14984 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:09.005  INFO 14984 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:09.005  INFO 14984 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:09.053 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 191, CreateTime = 1625128569001, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":24,"sale":26,"version":26})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:09.054 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 192, CreateTime = 1625128569003, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":24,"sale":26,"version":26})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:09.056  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:09.084 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 194, CreateTime = 1625128569005, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":23,"sale":27,"version":27})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:10.013  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:10.013  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:10.014  INFO 14984 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:10.015  INFO 14984 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:10.016  INFO 14984 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:10.017  INFO 14984 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:10.017  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:10.018  INFO 14984 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:10.018  INFO 14984 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:10.019  INFO 14984 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:10.019  INFO 14984 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:10.066 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 196, CreateTime = 1625128570015, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":22,"sale":28,"version":28})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:10.067  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:10.098 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 198, CreateTime = 1625128570018, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":21,"sale":29,"version":29})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:10.099 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 199, CreateTime = 1625128570019, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":21,"sale":29,"version":29})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:11.004  INFO 14984 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:11.005  INFO 14984 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:11.006  INFO 14984 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:11.007  INFO 14984 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:11.008  INFO 14984 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:11.009  INFO 14984 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:11.009  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:11.010  INFO 14984 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:11.011  INFO 14984 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:11.012  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:11.013  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:11.055 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 201, CreateTime = 1625128571007, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":20,"sale":30,"version":30})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:11.056  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:11.080 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 203, CreateTime = 1625128571011, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":19,"sale":31,"version":31})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:11.081 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 204, CreateTime = 1625128571013, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":19,"sale":31,"version":31})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:12.000  INFO 14984 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:12.001  INFO 14984 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:12.001  INFO 14984 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:12.002  INFO 14984 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:12.003  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:12.003  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:12.004  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:12.004  INFO 14984 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:12.004  INFO 14984 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:12.026  INFO 14984 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:12.026  INFO 14984 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:12.052 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 206, CreateTime = 1625128572002, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":18,"sale":32,"version":32})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:12.054  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:12.085 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 208, CreateTime = 1625128572004, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":17,"sale":33,"version":33})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:12.086 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 209, CreateTime = 1625128572026, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":17,"sale":33,"version":33})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:13.017  INFO 14984 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:13.018  INFO 14984 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:13.019  INFO 14984 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:13.019  INFO 14984 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:13.020  INFO 14984 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:13.021  INFO 14984 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:13.021  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:13.022  INFO 14984 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:13.022  INFO 14984 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:13.023  INFO 14984 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:13.023  INFO 14984 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:13.083 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 211, CreateTime = 1625128573019, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":16,"sale":34,"version":34})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:13.085  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:13.115 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 213, CreateTime = 1625128573022, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":15,"sale":35,"version":35})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:13.118 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 214, CreateTime = 1625128573023, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":15,"sale":35,"version":35})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:14.006  INFO 14984 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:14.007  INFO 14984 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:14.008  INFO 14984 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:14.009  INFO 14984 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:14.010  INFO 14984 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:14.010  INFO 14984 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:14.011  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:14.012  INFO 14984 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:14.012  INFO 14984 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:14.013  INFO 14984 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:36:14.014  INFO 14984 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:36:14.056 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 216, CreateTime = 1625128574009, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":14,"sale":36,"version":36})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:14.057  INFO 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:36:14.088 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 218, CreateTime = 1625128574012, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":13,"sale":37,"version":37})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:36:14.090 ERROR 14984 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 219, CreateTime = 1625128574014, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":13,"sale":37,"version":37})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:40:11.437  INFO 54288 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 54288 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:40:11.439  INFO 54288 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:40:11.813  INFO 54288 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:40:11.814  INFO 54288 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:40:11.826  INFO 54288 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2021-07-01 16:40:12.090  INFO 54288 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:40:12.096  INFO 54288 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:40:12.096  INFO 54288 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:40:12.141  INFO 54288 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:40:12.141  INFO 54288 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 674 ms
2021-07-01 16:40:12.410  INFO 54288 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:40:12.659  INFO 54288 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:40:12.679  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:40:12.679  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:40:12.679  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128812678
2021-07-01 16:40:12.760  INFO 54288 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:40:12.773  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:40:12.773  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:40:12.773  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128812773
2021-07-01 16:40:12.774  INFO 54288 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:40:12.774  INFO 54288 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:40:12.777  INFO 54288 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:40:12.781  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:40:12.781  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:40:12.781  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128812781
2021-07-01 16:40:12.782  INFO 54288 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:40:12.782  INFO 54288 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:40:12.783  INFO 54288 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:40:12.785  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:40:12.785  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:40:12.786  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:40:12.786  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:40:12.786  INFO 54288 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128812786
2021-07-01 16:40:12.786  INFO 54288 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:40:12.786  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:40:12.786  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:40:12.786  INFO 54288 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:40:12.787  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:40:12.787  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:40:12.787  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:40:12.787  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:40:12.787  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:40:12.787  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:40:12.789  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:40:12.789  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:40:12.790  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:40:12.790  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:40:12.790  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:40:12.792  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:40:12.792  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:40:12.792  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:40:12.800  INFO 54288 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:40:12.802  INFO 54288 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.611 seconds (JVM running for 1.997)
2021-07-01 16:40:16.313  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 35
2021-07-01 16:40:16.313  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 35
2021-07-01 16:40:16.313  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 35
2021-07-01 16:40:16.314  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:40:16.314  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:40:16.315  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:40:16.315  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:40:16.316  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:40:16.320  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=218, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:40:16.322  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:40:16.360  INFO 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:40:16.434 ERROR 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 218, CreateTime = 1625128574012, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":13,"sale":37,"version":37})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:40:16.436 ERROR 54288 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 219, CreateTime = 1625128574014, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":13,"sale":37,"version":37})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:41:27.586  INFO 28884 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 28884 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:41:27.588  INFO 28884 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:41:27.947  INFO 28884 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:41:27.948  INFO 28884 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:41:27.960  INFO 28884 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2021-07-01 16:41:28.222  INFO 28884 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:41:28.228  INFO 28884 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:41:28.228  INFO 28884 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:41:28.275  INFO 28884 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:41:28.275  INFO 28884 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 661 ms
2021-07-01 16:41:28.540  INFO 28884 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:41:28.789  INFO 28884 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:41:28.809  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:41:28.809  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:41:28.809  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128888809
2021-07-01 16:41:28.891  INFO 28884 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:41:28.904  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:41:28.904  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:41:28.904  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128888904
2021-07-01 16:41:28.905  INFO 28884 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:41:28.905  INFO 28884 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:41:28.908  INFO 28884 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:41:28.911  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:41:28.911  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:41:28.912  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128888911
2021-07-01 16:41:28.912  INFO 28884 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:41:28.912  INFO 28884 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:41:28.913  INFO 28884 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:41:28.916  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:41:28.916  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:41:28.916  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:41:28.916  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:41:28.916  INFO 28884 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128888916
2021-07-01 16:41:28.916  INFO 28884 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:41:28.916  INFO 28884 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:41:28.917  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:41:28.917  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:41:28.917  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:41:28.917  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:41:28.918  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:41:28.918  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:41:28.918  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:41:28.918  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:41:28.919  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:41:28.919  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:41:28.920  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:41:28.920  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:41:28.920  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:41:28.924  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:41:28.924  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:41:28.924  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:41:28.931  INFO 28884 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:41:28.932  INFO 28884 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.56 seconds (JVM running for 1.899)
2021-07-01 16:41:32.335  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 36
2021-07-01 16:41:32.335  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 36
2021-07-01 16:41:32.335  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 36
2021-07-01 16:41:32.335  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:41:32.335  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:41:32.337  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:41:32.337  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:41:32.337  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:41:32.341  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=218, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:41:32.343  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:41:32.382  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:41:32.460 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 218, CreateTime = 1625128574012, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":13,"sale":37,"version":37})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:41:32.462 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 219, CreateTime = 1625128574014, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":13,"sale":37,"version":37})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:19.094  INFO 28884 --- [http-nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:42:19.094  INFO 28884 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:42:19.098  INFO 28884 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2021-07-01 16:42:19.134  INFO 28884 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:19.134  INFO 28884 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:19.134  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:19.139  INFO 28884 --- [http-nio-8090-exec-3] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2021-07-01 16:42:19.147  INFO 28884 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:42:19.147  INFO 28884 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:42:19.147  INFO 28884 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625128939147
2021-07-01 16:42:19.151  INFO 28884 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:42:19.156  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:19.156  INFO 28884 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:19.156  INFO 28884 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:19.156  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:19.158  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:19.173  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:19.178  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:19.179  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:19.198 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 221, CreateTime = 1625128939152, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":12,"sale":38,"version":38})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:19.201 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 222, CreateTime = 1625128939152, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":12,"sale":38,"version":38})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:19.204 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 223, CreateTime = 1625128939158, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":12,"sale":38,"version":38})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:19.207  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:20.013  INFO 28884 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:20.014  INFO 28884 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:20.015  INFO 28884 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:20.016  INFO 28884 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:20.017  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:20.017  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:20.018  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:20.019  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:20.019  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:20.020  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:20.021  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:20.068 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 226, CreateTime = 1625128940016, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":10,"sale":40,"version":40})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:20.069  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:20.096 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 228, CreateTime = 1625128940019, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":9,"sale":41,"version":41})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:20.098 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 229, CreateTime = 1625128940021, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":9,"sale":41,"version":41})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:21.004  INFO 28884 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:21.005  INFO 28884 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:21.006  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:21.007  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:21.008  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:21.008  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:21.009  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:21.010  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:21.011  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:21.012  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:21.013  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:21.037 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 231, CreateTime = 1625128941007, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":8,"sale":42,"version":42})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:21.040  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:21.095 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 233, CreateTime = 1625128941011, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":7,"sale":43,"version":43})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:21.099 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 234, CreateTime = 1625128941013, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":7,"sale":43,"version":43})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:22.000  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:22.001  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:22.002  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:22.003  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:22.004  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:22.005  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:22.005  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:22.007  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:22.007  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:22.008  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:22.009  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:22.069 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 236, CreateTime = 1625128942003, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":6,"sale":44,"version":44})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:22.072  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:22.100 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 238, CreateTime = 1625128942007, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":5,"sale":45,"version":45})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:22.101 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 239, CreateTime = 1625128942009, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":5,"sale":45,"version":45})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:23.017  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:23.018  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:23.019  INFO 28884 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:23.020  INFO 28884 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:23.021  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:23.022  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:23.022  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:23.023  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:23.024  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:23.025  INFO 28884 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:23.025  INFO 28884 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:23.057 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 241, CreateTime = 1625128943020, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":4,"sale":46,"version":46})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:23.059  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:23.089 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 243, CreateTime = 1625128943024, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":3,"sale":47,"version":47})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:23.091 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 244, CreateTime = 1625128943025, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":3,"sale":47,"version":47})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:24.007  INFO 28884 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:24.008  INFO 28884 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:24.009  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:24.009  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:24.010  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:24.010  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:24.010  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:24.011  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:24.012  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:24.013  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:24.014  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:42:24.054 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 246, CreateTime = 1625128944009, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":2,"sale":48,"version":48})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:24.055  INFO 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:42:24.086 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 248, CreateTime = 1625128944012, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":1,"sale":49,"version":49})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:24.088 ERROR 28884 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 249, CreateTime = 1625128944013, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":1,"sale":49,"version":49})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:42:25.000  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:25.000  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:25.001 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:25.001  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:25.001  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:25.002 ERROR 28884 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:25.002  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:25.003  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:25.003 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:25.003  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:25.004  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:25.004 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:25.004  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:25.004  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:25.004 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:26.019  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:26.020  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:26.020 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:26.021  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:26.021  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:26.022 ERROR 28884 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:26.022  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:26.022  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:26.022 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:26.023  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:26.023  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:26.023 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:26.024  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:26.025  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:26.025 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:27.010  INFO 28884 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:27.010  INFO 28884 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:27.011 ERROR 28884 --- [http-nio-8090-exec-8] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:27.011  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:27.012  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:27.012 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:27.012  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:27.013  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:27.013 ERROR 28884 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:27.013  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:27.014  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:27.014 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:27.014  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:27.015  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:27.015 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:28.000  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:28.001  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:28.001 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:28.001  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:28.002  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:28.002 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:28.002  INFO 28884 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:28.003  INFO 28884 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:28.003 ERROR 28884 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:28.003  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:28.004  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:28.004 ERROR 28884 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:28.005  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:28.005  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:28.005 ERROR 28884 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:48.071  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:48.073  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:48.073 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:48.074  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:48.075  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:48.075 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:48.076  INFO 28884 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:48.076  INFO 28884 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:48.076 ERROR 28884 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:48.077  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:48.077  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:48.078 ERROR 28884 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:48.078  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:48.078  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:48.079 ERROR 28884 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:49.000  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:49.000  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:49.001 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:49.001  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:49.001  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:49.002 ERROR 28884 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:49.002  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:49.002  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:49.002 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:49.003  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:49.003  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:49.003 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:49.004  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:49.004  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:49.004 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:50.019  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:50.020  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:50.020 ERROR 28884 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:50.021  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:50.021  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:50.021 ERROR 28884 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:50.022  INFO 28884 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:50.022  INFO 28884 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:50.022 ERROR 28884 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:50.023  INFO 28884 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:50.023  INFO 28884 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:50.023 ERROR 28884 --- [http-nio-8090-exec-8] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:50.024  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:50.024  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:50.024 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:51.008  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:51.008  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:51.008 ERROR 28884 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:51.009  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:51.009  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:51.010 ERROR 28884 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:51.010  INFO 28884 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:51.010  INFO 28884 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:51.011 ERROR 28884 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:51.011  INFO 28884 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:51.011  INFO 28884 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:51.012 ERROR 28884 --- [http-nio-8090-exec-8] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:51.012  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:51.013  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:51.013 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:52.000  INFO 28884 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:52.001  INFO 28884 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:52.001 ERROR 28884 --- [http-nio-8090-exec-8] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:52.001  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:52.002  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:52.002 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:52.002  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:52.003  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:52.003 ERROR 28884 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:52.003  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:52.004  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:52.004 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:52.004  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:52.005  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:52.005 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:53.020  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:53.021  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:53.021 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:53.021  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:53.022  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:53.022 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:53.023  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:53.023  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:53.023 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:53.024  INFO 28884 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:53.024  INFO 28884 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:53.024 ERROR 28884 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:53.024  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:53.025  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:53.025 ERROR 28884 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:54.011  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:54.011  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:54.011 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:54.012  INFO 28884 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:54.014  INFO 28884 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:54.014 ERROR 28884 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:54.014  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:54.014  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:54.014 ERROR 28884 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:54.015  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:54.015  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:54.015 ERROR 28884 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:54.016  INFO 28884 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:54.016  INFO 28884 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:54.016 ERROR 28884 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:55.002  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:55.002  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:55.003 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:55.003  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:55.004  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:55.004 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:55.005  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:55.005  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:55.005 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:55.006  INFO 28884 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:55.006  INFO 28884 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:55.006 ERROR 28884 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:55.007  INFO 28884 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:55.007  INFO 28884 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:55.007 ERROR 28884 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:56.000  INFO 28884 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:56.000  INFO 28884 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:56.000 ERROR 28884 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:56.024  INFO 28884 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:56.024  INFO 28884 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:56.025 ERROR 28884 --- [http-nio-8090-exec-8] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:56.025  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:56.026  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:56.026 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:56.026  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:56.027  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:56.027 ERROR 28884 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:56.027  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:56.028  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:56.028 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:57.013  INFO 28884 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:57.014  INFO 28884 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:57.014 ERROR 28884 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:57.015  INFO 28884 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:57.015  INFO 28884 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:57.016 ERROR 28884 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:57.016  INFO 28884 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:57.016  INFO 28884 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:57.016 ERROR 28884 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:57.017  INFO 28884 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:57.017  INFO 28884 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:57.017 ERROR 28884 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:42:57.018  INFO 28884 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:42:57.018  INFO 28884 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:42:57.018 ERROR 28884 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:43:35.748  INFO 48700 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 48700 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:43:35.749  INFO 48700 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:43:36.099  INFO 48700 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:43:36.100  INFO 48700 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:43:36.112  INFO 48700 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2021-07-01 16:43:36.385  INFO 48700 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:43:36.390  INFO 48700 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:43:36.390  INFO 48700 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:43:36.434  INFO 48700 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:43:36.434  INFO 48700 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 660 ms
2021-07-01 16:43:36.687  INFO 48700 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:43:36.942  INFO 48700 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:43:36.962  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:43:36.962  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:43:36.962  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129016962
2021-07-01 16:43:37.044  INFO 48700 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:43:37.057  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:43:37.057  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:43:37.057  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129017057
2021-07-01 16:43:37.058  INFO 48700 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:43:37.058  INFO 48700 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:43:37.061  INFO 48700 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:43:37.065  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:43:37.065  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:43:37.065  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129017064
2021-07-01 16:43:37.065  INFO 48700 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:43:37.065  INFO 48700 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:43:37.066  INFO 48700 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:43:37.069  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:43:37.069  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:43:37.070  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:43:37.070  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:43:37.070  INFO 48700 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129017070
2021-07-01 16:43:37.070  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:43:37.070  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:43:37.070  INFO 48700 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:43:37.070  INFO 48700 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:43:37.071  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:43:37.071  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:43:37.071  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:43:37.071  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:43:37.072  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:43:37.072  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:43:37.073  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:43:37.074  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:43:37.074  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:43:37.074  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:43:37.074  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:43:37.078  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:43:37.078  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:43:37.078  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:43:37.085  INFO 48700 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:43:37.087  INFO 48700 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.546 seconds (JVM running for 1.878)
2021-07-01 16:43:42.371  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 37
2021-07-01 16:43:42.371  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 37
2021-07-01 16:43:42.371  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 37
2021-07-01 16:43:42.372  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:43:42.372  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:43:42.373  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:43:42.373  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:43:42.373  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:43:42.377  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=248, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:43:42.380  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:43:42.422  INFO 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:43:42.506 ERROR 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 248, CreateTime = 1625128944012, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":1,"sale":49,"version":49})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:43:42.508 ERROR 48700 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 249, CreateTime = 1625128944013, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":1,"sale":49,"version":49})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:44:25.648  INFO 48700 --- [http-nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:44:25.649  INFO 48700 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:44:25.652  INFO 48700 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2021-07-01 16:44:25.686  INFO 48700 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:25.686  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:25.686  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:25.687  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:25.688 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:25.688  INFO 48700 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:25.689 ERROR 48700 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:25.689  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:25.689 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:25.705  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:25.705  INFO 48700 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:25.705  INFO 48700 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:25.705  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:25.706 ERROR 48700 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:25.706 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:26.007  INFO 48700 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:26.008  INFO 48700 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:26.008 ERROR 48700 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:26.009  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:26.009  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:26.010 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:26.010  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:26.011  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:26.011 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:26.011  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:26.012  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:26.012 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:26.013  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:26.013  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:26.013 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:27.000  INFO 48700 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:27.001  INFO 48700 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:27.001 ERROR 48700 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:27.002  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:27.002  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:27.002 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:27.003  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:27.003  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:27.003 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:27.004  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:27.004  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:27.004 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:27.005  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:27.005  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:27.005 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:28.020  INFO 48700 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:28.021  INFO 48700 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:28.021 ERROR 48700 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:28.022  INFO 48700 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:28.022  INFO 48700 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:28.023 ERROR 48700 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:28.023  INFO 48700 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:28.024  INFO 48700 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:28.024 ERROR 48700 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:28.024  INFO 48700 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:28.025  INFO 48700 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:28.025 ERROR 48700 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:28.025  INFO 48700 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:28.026  INFO 48700 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:28.026 ERROR 48700 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:29.009  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:29.009  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:29.010 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:29.011  INFO 48700 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:29.011  INFO 48700 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:29.012 ERROR 48700 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:29.012  INFO 48700 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:29.013  INFO 48700 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:29.013 ERROR 48700 --- [http-nio-8090-exec-8] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:29.014  INFO 48700 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:29.015  INFO 48700 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:29.015 ERROR 48700 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:29.016  INFO 48700 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:29.017  INFO 48700 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:29.017 ERROR 48700 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:30.000  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:30.000  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:30.001 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:30.001  INFO 48700 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:30.002  INFO 48700 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:30.002 ERROR 48700 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:30.003  INFO 48700 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:30.003  INFO 48700 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:30.003 ERROR 48700 --- [http-nio-8090-exec-8] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:30.004  INFO 48700 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:30.004  INFO 48700 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:30.005 ERROR 48700 --- [http-nio-8090-exec-7] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:30.005  INFO 48700 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:30.006  INFO 48700 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:30.006 ERROR 48700 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:31.023  INFO 48700 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:31.024  INFO 48700 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:31.024 ERROR 48700 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:31.025  INFO 48700 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:31.025  INFO 48700 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:31.025 ERROR 48700 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:31.026  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:31.026  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:31.026 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:31.027  INFO 48700 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:31.027  INFO 48700 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:31.027 ERROR 48700 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:31.028  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:31.028  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:31.028 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:32.013  INFO 48700 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:32.014  INFO 48700 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:32.014 ERROR 48700 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:32.015  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:32.016  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:32.016 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:32.016  INFO 48700 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:32.017  INFO 48700 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:32.017 ERROR 48700 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:32.017  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:32.018  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:32.018 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:32.019  INFO 48700 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:32.019  INFO 48700 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:32.019 ERROR 48700 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:33.002  INFO 48700 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:33.002  INFO 48700 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:33.003 ERROR 48700 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:33.003  INFO 48700 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:33.004  INFO 48700 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:33.004 ERROR 48700 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:33.004  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:33.005  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:33.005 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:33.006  INFO 48700 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:33.006  INFO 48700 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:33.006 ERROR 48700 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:33.006  INFO 48700 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:33.007  INFO 48700 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:33.007 ERROR 48700 --- [http-nio-8090-exec-3] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:34.000  INFO 48700 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:34.000  INFO 48700 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:34.000 ERROR 48700 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:34.001  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:34.001  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:34.001 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:34.002  INFO 48700 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:34.002  INFO 48700 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:34.002 ERROR 48700 --- [http-nio-8090-exec-1] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:34.026  INFO 48700 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:34.026  INFO 48700 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:34.027 ERROR 48700 --- [http-nio-8090-exec-6] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:34.027  INFO 48700 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:34.028  INFO 48700 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:34.028 ERROR 48700 --- [http-nio-8090-exec-8] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:35.016  INFO 48700 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:35.018  INFO 48700 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:35.018 ERROR 48700 --- [http-nio-8090-exec-9] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:35.019  INFO 48700 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:35.020  INFO 48700 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:35.020 ERROR 48700 --- [http-nio-8090-exec-10] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:35.021  INFO 48700 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:35.021  INFO 48700 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:35.021 ERROR 48700 --- [http-nio-8090-exec-4] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:35.022  INFO 48700 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:35.023  INFO 48700 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:35.023 ERROR 48700 --- [http-nio-8090-exec-5] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:44:35.023  INFO 48700 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:44:35.024  INFO 48700 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 库存不足
2021-07-01 16:44:35.024 ERROR 48700 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : Exception: com.lyf.exception.OrderException: 库存不足 Redis currentCount: 50
2021-07-01 16:45:50.498  INFO 38924 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 38924 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:45:50.499  INFO 38924 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:45:50.860  INFO 38924 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:45:50.861  INFO 38924 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:45:50.873  INFO 38924 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2021-07-01 16:45:51.144  INFO 38924 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:45:51.150  INFO 38924 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:45:51.150  INFO 38924 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:45:51.196  INFO 38924 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:45:51.196  INFO 38924 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 669 ms
2021-07-01 16:45:51.467  INFO 38924 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:45:51.718  INFO 38924 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:45:51.739  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:45:51.739  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:45:51.739  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129151738
2021-07-01 16:45:51.818  INFO 38924 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:45:51.831  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:45:51.831  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:45:51.831  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129151831
2021-07-01 16:45:51.832  INFO 38924 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:45:51.833  INFO 38924 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:45:51.835  INFO 38924 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:45:51.839  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:45:51.839  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:45:51.839  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129151839
2021-07-01 16:45:51.839  INFO 38924 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:45:51.839  INFO 38924 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:45:51.840  INFO 38924 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:45:51.843  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:45:51.843  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:45:51.843  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:45:51.843  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:45:51.843  INFO 38924 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129151843
2021-07-01 16:45:51.843  INFO 38924 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:45:51.843  INFO 38924 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:45:51.843  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:45:51.843  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:45:51.844  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:45:51.844  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:45:51.845  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:45:51.845  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:45:51.845  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:45:51.845  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:45:51.846  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:45:51.846  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:45:51.847  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:45:51.847  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:45:51.847  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:45:51.850  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:45:51.850  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:45:51.850  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:45:51.857  INFO 38924 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:45:51.859  INFO 38924 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.584 seconds (JVM running for 1.925)
2021-07-01 16:45:55.403  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 38
2021-07-01 16:45:55.403  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 38
2021-07-01 16:45:55.403  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 38
2021-07-01 16:45:55.404  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:45:55.404  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:45:55.405  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:45:55.405  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:45:55.406  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:45:55.410  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=248, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:45:55.412  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:45:55.452  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:45:55.526 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 248, CreateTime = 1625128944012, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":1,"sale":49,"version":49})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:45:55.528 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 249, CreateTime = 1625128944013, serialized key size = -1, serialized value size = 57, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":1,"sale":49,"version":49})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:47:42.182  INFO 38924 --- [http-nio-8090-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:47:42.182  INFO 38924 --- [http-nio-8090-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:47:42.187  INFO 38924 --- [http-nio-8090-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2021-07-01 16:47:42.218 ERROR 38924 --- [http-nio-8090-exec-2] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 106685
2021-07-01 16:47:42.411  INFO 38924 --- [http-nio-8090-exec-2] com.lyf.controller.IndexController       : 重置数据库和缓存成功！
2021-07-01 16:48:30.730  INFO 38924 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:30.736  INFO 38924 --- [http-nio-8090-exec-3] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2021-07-01 16:48:30.745  INFO 38924 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:48:30.745  INFO 38924 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:48:30.745  INFO 38924 --- [http-nio-8090-exec-3] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129310745
2021-07-01 16:48:30.750  INFO 38924 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:48:30.755  INFO 38924 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:30.757  INFO 38924 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:30.758  INFO 38924 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:30.758  INFO 38924 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:30.759  INFO 38924 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:30.761  INFO 38924 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:30.762  INFO 38924 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:30.762  INFO 38924 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:30.763  INFO 38924 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:30.764  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:30.812 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 251, CreateTime = 1625129310758, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":50,"sale":0,"version":0})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:30.814 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 252, CreateTime = 1625129310759, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":50,"sale":0,"version":0})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:30.816  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:30.868 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 254, CreateTime = 1625129310763, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":49,"sale":1,"version":1})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:31.000  INFO 38924 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:31.000  INFO 38924 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:31.002  INFO 38924 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:31.002  INFO 38924 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:31.005  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:31.019  INFO 38924 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:31.020  INFO 38924 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:31.021  INFO 38924 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:31.021  INFO 38924 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:31.022  INFO 38924 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:31.023  INFO 38924 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:31.036 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 256, CreateTime = 1625129311002, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":48,"sale":2,"version":2})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:31.039  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:31.067 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 258, CreateTime = 1625129311021, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":47,"sale":3,"version":3})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:31.069 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 259, CreateTime = 1625129311023, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":47,"sale":3,"version":3})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:32.010  INFO 38924 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:32.011  INFO 38924 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:32.012  INFO 38924 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:32.013  INFO 38924 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:32.015  INFO 38924 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:32.015  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:32.016  INFO 38924 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:32.017  INFO 38924 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:32.018  INFO 38924 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:32.019  INFO 38924 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:32.019  INFO 38924 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:32.050 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 261, CreateTime = 1625129312013, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":46,"sale":4,"version":4})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:32.052  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:32.082 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 263, CreateTime = 1625129312018, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":45,"sale":5,"version":5})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:32.084 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 264, CreateTime = 1625129312019, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":45,"sale":5,"version":5})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:33.000  INFO 38924 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:33.001  INFO 38924 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:33.002  INFO 38924 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:33.003  INFO 38924 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:33.004  INFO 38924 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:33.004  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:33.005  INFO 38924 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:33.006  INFO 38924 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:33.007  INFO 38924 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:33.008  INFO 38924 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:33.008  INFO 38924 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:33.031 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 266, CreateTime = 1625129313003, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":44,"sale":6,"version":6})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:33.033  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:33.063 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 268, CreateTime = 1625129313007, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":43,"sale":7,"version":7})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:33.064 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 269, CreateTime = 1625129313008, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":43,"sale":7,"version":7})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:34.020  INFO 38924 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:34.021  INFO 38924 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:34.022  INFO 38924 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:34.022  INFO 38924 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:34.023  INFO 38924 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:34.023  INFO 38924 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:34.024  INFO 38924 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:34.025  INFO 38924 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:34.025  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:34.026  INFO 38924 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:34.026  INFO 38924 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:34.073 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 271, CreateTime = 1625129314023, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":42,"sale":8,"version":8})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:34.074 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 272, CreateTime = 1625129314023, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":42,"sale":8,"version":8})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:34.076  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:34.101 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 274, CreateTime = 1625129314026, serialized key size = -1, serialized value size = 56, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":41,"sale":9,"version":9})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:35.013  INFO 38924 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:35.014  INFO 38924 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:35.015  INFO 38924 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:35.016  INFO 38924 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:35.017  INFO 38924 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:35.018  INFO 38924 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:35.018  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:35.019  INFO 38924 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:35.020  INFO 38924 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:35.021  INFO 38924 --- [http-nio-8090-exec-9] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:35.021  INFO 38924 --- [http-nio-8090-exec-9] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:35.062 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 276, CreateTime = 1625129315016, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":40,"sale":10,"version":10})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:35.065  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:35.090 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 278, CreateTime = 1625129315020, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":39,"sale":11,"version":11})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:35.092 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 279, CreateTime = 1625129315021, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":39,"sale":11,"version":11})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:36.002  INFO 38924 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:36.003  INFO 38924 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:36.004  INFO 38924 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:36.005  INFO 38924 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:36.006  INFO 38924 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:36.006  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:36.006  INFO 38924 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:36.007  INFO 38924 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:36.008  INFO 38924 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:36.008  INFO 38924 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:36.009  INFO 38924 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:36.039 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 281, CreateTime = 1625129316005, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":38,"sale":12,"version":12})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:36.041  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:36.072 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 283, CreateTime = 1625129316007, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":37,"sale":13,"version":13})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:36.073 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 284, CreateTime = 1625129316009, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":37,"sale":13,"version":13})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:37.000  INFO 38924 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:37.000  INFO 38924 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:37.001  INFO 38924 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:37.001  INFO 38924 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:37.002  INFO 38924 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:37.003  INFO 38924 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:37.003  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:37.003  INFO 38924 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:37.004  INFO 38924 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:37.025  INFO 38924 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:37.026  INFO 38924 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:37.053 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 286, CreateTime = 1625129317001, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":36,"sale":14,"version":14})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:37.055  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:37.086 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 288, CreateTime = 1625129317004, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":35,"sale":15,"version":15})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:37.087 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 289, CreateTime = 1625129317026, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":35,"sale":15,"version":15})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:38.016  INFO 38924 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:38.017  INFO 38924 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:38.018  INFO 38924 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:38.019  INFO 38924 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:38.020  INFO 38924 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:38.020  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:38.020  INFO 38924 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:38.021  INFO 38924 --- [http-nio-8090-exec-6] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:38.022  INFO 38924 --- [http-nio-8090-exec-6] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:38.023  INFO 38924 --- [http-nio-8090-exec-7] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:38.023  INFO 38924 --- [http-nio-8090-exec-7] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:38.085 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 291, CreateTime = 1625129318019, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":34,"sale":16,"version":16})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:38.087  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:38.116 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 293, CreateTime = 1625129318022, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":33,"sale":17,"version":17})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:38.118 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 294, CreateTime = 1625129318023, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":33,"sale":17,"version":17})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:39.006  INFO 38924 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:39.007  INFO 38924 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:39.008  INFO 38924 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:39.009  INFO 38924 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:39.009  INFO 38924 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:39.010  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:39.010  INFO 38924 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:39.010  INFO 38924 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:39.011  INFO 38924 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:39.011  INFO 38924 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:39.012  INFO 38924 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:39.062 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 296, CreateTime = 1625129319008, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":32,"sale":18,"version":18})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:39.063  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:39.088 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 298, CreateTime = 1625129319011, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":31,"sale":19,"version":19})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:39.089 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 299, CreateTime = 1625129319012, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":31,"sale":19,"version":19})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:40.000  INFO 38924 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:40.000  INFO 38924 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:40.001  INFO 38924 --- [http-nio-8090-exec-10] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:40.002  INFO 38924 --- [http-nio-8090-exec-10] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:40.002  INFO 38924 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:40.003  INFO 38924 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:40.003  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:40.004  INFO 38924 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:40.004  INFO 38924 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:40.004  INFO 38924 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:48:40.005  INFO 38924 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:48:40.030 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 301, CreateTime = 1625129320002, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":30,"sale":20,"version":20})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:40.031  INFO 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:48:40.061 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 303, CreateTime = 1625129320004, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:48:40.062 ERROR 38924 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 304, CreateTime = 1625129320005, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor40.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:53:56.229  INFO 41284 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 41284 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:53:56.231  INFO 41284 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:53:56.583  INFO 41284 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:53:56.584  INFO 41284 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:53:56.596  INFO 41284 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2021-07-01 16:53:56.884  INFO 41284 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:53:56.890  INFO 41284 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:53:56.890  INFO 41284 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:53:56.937  INFO 41284 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:53:56.937  INFO 41284 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 679 ms
2021-07-01 16:53:57.209  INFO 41284 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:53:57.488  INFO 41284 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:53:57.508  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:53:57.508  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:53:57.508  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129637507
2021-07-01 16:53:57.590  INFO 41284 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:53:57.604  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:53:57.604  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:53:57.604  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129637604
2021-07-01 16:53:57.605  INFO 41284 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:53:57.606  INFO 41284 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:53:57.608  INFO 41284 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:53:57.612  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:53:57.612  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:53:57.612  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129637612
2021-07-01 16:53:57.613  INFO 41284 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:53:57.613  INFO 41284 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:53:57.614  INFO 41284 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:53:57.617  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:53:57.617  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:53:57.617  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:53:57.617  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:53:57.617  INFO 41284 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129637617
2021-07-01 16:53:57.617  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:53:57.617  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:53:57.618  INFO 41284 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:53:57.618  INFO 41284 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:53:57.618  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:53:57.618  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:53:57.619  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:53:57.619  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:53:57.619  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:53:57.619  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:53:57.620  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:53:57.621  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:53:57.621  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:53:57.621  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:53:57.621  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:53:57.624  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:53:57.624  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:53:57.624  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:53:57.634  INFO 41284 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:53:57.636  INFO 41284 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.623 seconds (JVM running for 1.972)
2021-07-01 16:54:02.511  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 39
2021-07-01 16:54:02.511  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 39
2021-07-01 16:54:02.511  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 39
2021-07-01 16:54:02.511  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:54:02.511  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:54:02.512  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:54:02.512  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:54:02.513  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:54:02.517  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=303, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:54:02.519  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:54:02.558  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:54:02.629 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 303, CreateTime = 1625129320004, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:02.632 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 304, CreateTime = 1625129320005, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":29,"sale":21,"version":21})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:17.866  INFO 41284 --- [http-nio-8090-exec-6] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:54:17.867  INFO 41284 --- [http-nio-8090-exec-6] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:54:17.870  INFO 41284 --- [http-nio-8090-exec-6] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2021-07-01 16:54:17.908  INFO 41284 --- [http-nio-8090-exec-11] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:17.908  INFO 41284 --- [http-nio-8090-exec-4] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:17.908  INFO 41284 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:17.908  INFO 41284 --- [http-nio-8090-exec-20] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:17.908  INFO 41284 --- [http-nio-8090-exec-1] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:17.916  INFO 41284 --- [http-nio-8090-exec-8] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2021-07-01 16:54:17.928  INFO 41284 --- [http-nio-8090-exec-8] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:54:17.928  INFO 41284 --- [http-nio-8090-exec-8] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:54:17.928  INFO 41284 --- [http-nio-8090-exec-8] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129657928
2021-07-01 16:54:17.936  INFO 41284 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:54:17.954  INFO 41284 --- [http-nio-8090-exec-11] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:17.955  INFO 41284 --- [http-nio-8090-exec-20] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:17.955  INFO 41284 --- [http-nio-8090-exec-4] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:17.955  INFO 41284 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:17.955  INFO 41284 --- [http-nio-8090-exec-1] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:18.001  INFO 41284 --- [http-nio-8090-exec-29] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:18.001  INFO 41284 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:18.002  INFO 41284 --- [http-nio-8090-exec-36] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:18.001  INFO 41284 --- [http-nio-8090-exec-39] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:18.001  INFO 41284 --- [http-nio-8090-exec-24] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:18.006  INFO 41284 --- [http-nio-8090-exec-36] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:18.007  INFO 41284 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:18.007  INFO 41284 --- [http-nio-8090-exec-39] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:18.006  INFO 41284 --- [http-nio-8090-exec-29] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:18.011  INFO 41284 --- [http-nio-8090-exec-24] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:18.023  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:54:18.124 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 306, CreateTime = 1625129657941, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":28,"sale":22,"version":22})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:18.139 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 307, CreateTime = 1625129657941, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":28,"sale":22,"version":22})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:18.161 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 308, CreateTime = 1625129657941, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":28,"sale":22,"version":22})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:18.170 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 309, CreateTime = 1625129657941, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":28,"sale":22,"version":22})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:18.199  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:54:18.236 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 311, CreateTime = 1625129658006, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":27,"sale":23,"version":23})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:18.244 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 312, CreateTime = 1625129658006, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":27,"sale":23,"version":23})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:18.249 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 313, CreateTime = 1625129658007, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":27,"sale":23,"version":23})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:18.264 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 314, CreateTime = 1625129658011, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":27,"sale":23,"version":23})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:52.091  INFO 41284 --- [http-nio-8090-exec-87] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:52.092  INFO 41284 --- [http-nio-8090-exec-87] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:52.093  INFO 41284 --- [http-nio-8090-exec-95] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:52.093  INFO 41284 --- [http-nio-8090-exec-25] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:52.095  INFO 41284 --- [http-nio-8090-exec-95] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:52.095  INFO 41284 --- [http-nio-8090-exec-25] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:52.096  INFO 41284 --- [http-nio-8090-exec-99] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:52.097  INFO 41284 --- [http-nio-8090-exec-35] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:54:52.097  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:54:52.097  INFO 41284 --- [http-nio-8090-exec-99] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:52.098  INFO 41284 --- [http-nio-8090-exec-35] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:54:52.148 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 316, CreateTime = 1625129692095, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":26,"sale":24,"version":24})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:52.150 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 317, CreateTime = 1625129692095, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":26,"sale":24,"version":24})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:54:52.153  INFO 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:54:52.203 ERROR 41284 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.kafka.listener.LoggingErrorHandler   : Error while processing: ConsumerRecord(topic = SECONDS-KILL-TOPIC, partition = 0, leaderEpoch = 0, offset = 319, CreateTime = 1625129692098, serialized key size = -1, serialized value size = 58, headers = RecordHeaders(headers = [], isReadOnly = false), key = null, value = {"id":1,"name":"手机","count":25,"sale":25,"version":25})

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.lyf.kafka.customer.ConsumerOrderListen.listen(org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>) throws java.lang.Exception' threw exception; nested exception is com.lyf.exception.OrderException: 订单跟新失败!; nested exception is com.lyf.exception.OrderException: 订单跟新失败!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1787) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1779) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1692) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1618) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1521) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1262) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1009) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:929) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_191]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_191]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]
Caused by: com.lyf.exception.OrderException: 订单跟新失败!
	at com.lyf.service.imp.StockOrderServiceImpl.saleStockOptimsticWithRedis(StockOrderServiceImpl.java:134) ~[classes/:na]
	at com.lyf.service.imp.StockOrderServiceImpl.consumerTopicToCreateOrderWithKafka(StockOrderServiceImpl.java:93) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at com.sun.proxy.$Proxy75.consumerTopicToCreateOrderWithKafka(Unknown Source) ~[na:na]
	at com.lyf.kafka.customer.ConsumerOrderListen.listen(ConsumerOrderListen.java:32) ~[classes/:na]
	at sun.reflect.GeneratedMethodAccessor44.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.5.RELEASE.jar:5.2.5.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1741) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1724) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1679) [spring-kafka-2.3.7.RELEASE.jar:2.3.7.RELEASE]
	... 8 common frames omitted

2021-07-01 16:57:19.788  INFO 17104 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 17104 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:57:19.789  INFO 17104 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:57:20.157  INFO 17104 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:57:20.159  INFO 17104 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:57:20.171  INFO 17104 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2021-07-01 16:57:20.445  INFO 17104 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:57:20.450  INFO 17104 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:57:20.450  INFO 17104 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:57:20.496  INFO 17104 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:57:20.496  INFO 17104 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 681 ms
2021-07-01 16:57:20.755  INFO 17104 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:57:21.002  INFO 17104 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:57:21.022  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:21.022  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:21.022  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129841021
2021-07-01 16:57:21.103  INFO 17104 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:57:21.116  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:21.117  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:21.117  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129841116
2021-07-01 16:57:21.117  INFO 17104 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:57:21.118  INFO 17104 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:57:21.121  INFO 17104 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:57:21.124  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:21.124  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:21.124  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129841124
2021-07-01 16:57:21.124  INFO 17104 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:57:21.124  INFO 17104 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:57:21.125  INFO 17104 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:57:21.128  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:57:21.128  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:57:21.128  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:21.128  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:21.128  INFO 17104 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129841128
2021-07-01 16:57:21.128  INFO 17104 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:57:21.128  INFO 17104 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:57:21.128  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:57:21.128  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:57:21.129  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:57:21.129  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:57:21.130  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:57:21.130  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:57:21.130  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:21.130  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:21.131  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:57:21.131  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:57:21.132  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:57:21.132  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:57:21.132  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:21.134  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:21.134  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:21.134  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:21.141  INFO 17104 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:57:21.143  INFO 17104 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.623 seconds (JVM running for 1.977)
2021-07-01 16:57:24.555  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 40
2021-07-01 16:57:24.555  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 40
2021-07-01 16:57:24.555  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 40
2021-07-01 16:57:24.555  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:57:24.555  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:57:24.556  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:57:24.556  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:57:24.556  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:57:24.560  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=319, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:57:24.563  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:57:24.604  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:57:24.678  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:30.842  INFO 17104 --- [http-nio-8090-exec-9] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:57:30.842  INFO 17104 --- [http-nio-8090-exec-9] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:57:30.846  INFO 17104 --- [http-nio-8090-exec-9] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2021-07-01 16:57:30.883  INFO 17104 --- [http-nio-8090-exec-5] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:30.883  INFO 17104 --- [http-nio-8090-exec-22] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:30.883  INFO 17104 --- [http-nio-8090-exec-12] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:30.883  INFO 17104 --- [http-nio-8090-exec-15] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:30.883  INFO 17104 --- [http-nio-8090-exec-11] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:30.892  INFO 17104 --- [http-nio-8090-exec-5] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2021-07-01 16:57:30.905  INFO 17104 --- [http-nio-8090-exec-5] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:30.905  INFO 17104 --- [http-nio-8090-exec-5] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:30.905  INFO 17104 --- [http-nio-8090-exec-5] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129850905
2021-07-01 16:57:30.910  INFO 17104 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:57:30.927  INFO 17104 --- [http-nio-8090-exec-15] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:30.927  INFO 17104 --- [http-nio-8090-exec-22] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:30.927  INFO 17104 --- [http-nio-8090-exec-11] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:30.927  INFO 17104 --- [http-nio-8090-exec-5] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:30.929  INFO 17104 --- [http-nio-8090-exec-12] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:30.981  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:57:31.001  INFO 17104 --- [http-nio-8090-exec-13] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:31.001  INFO 17104 --- [http-nio-8090-exec-55] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:31.001  INFO 17104 --- [http-nio-8090-exec-42] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:31.001  INFO 17104 --- [http-nio-8090-exec-12] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:31.002  INFO 17104 --- [http-nio-8090-exec-54] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:57:31.002  INFO 17104 --- [http-nio-8090-exec-55] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:31.003  INFO 17104 --- [http-nio-8090-exec-13] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:31.005  INFO 17104 --- [http-nio-8090-exec-54] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:31.005  INFO 17104 --- [http-nio-8090-exec-42] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:31.004  INFO 17104 --- [http-nio-8090-exec-12] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:57:31.033  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:31.038  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:31.049  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:31.061  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:31.120  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:57:31.162  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:31.174  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:31.184  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:31.188  INFO 17104 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : 订单跟新失败!
2021-07-01 16:57:55.336  INFO 47820 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 47820 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 16:57:55.338  INFO 47820 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 16:57:55.693  INFO 47820 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 16:57:55.694  INFO 47820 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 16:57:55.706  INFO 47820 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2021-07-01 16:57:55.982  INFO 47820 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 16:57:55.987  INFO 47820 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 16:57:55.987  INFO 47820 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 16:57:56.030  INFO 47820 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 16:57:56.031  INFO 47820 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 667 ms
2021-07-01 16:57:56.281  INFO 47820 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 16:57:56.564  INFO 47820 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 16:57:56.585  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:56.585  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:56.585  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129876584
2021-07-01 16:57:56.664  INFO 47820 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:57:56.678  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:56.678  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:56.678  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129876678
2021-07-01 16:57:56.679  INFO 47820 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:57:56.679  INFO 47820 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:57:56.682  INFO 47820 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:57:56.685  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:56.685  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:56.685  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129876685
2021-07-01 16:57:56.685  INFO 47820 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:57:56.685  INFO 47820 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:57:56.686  INFO 47820 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 16:57:56.689  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:57:56.689  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:57:56.689  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:57:56.689  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:57:56.689  INFO 47820 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129876689
2021-07-01 16:57:56.689  INFO 47820 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 16:57:56.689  INFO 47820 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 16:57:56.689  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:57:56.689  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:57:56.690  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:57:56.690  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:57:56.691  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:57:56.691  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:57:56.691  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:56.691  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:56.692  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:57:56.692  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 16:57:56.692  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 16:57:56.692  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 16:57:56.692  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:56.695  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:56.695  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:56.695  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 16:57:56.702  INFO 47820 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 16:57:56.704  INFO 47820 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.582 seconds (JVM running for 1.914)
2021-07-01 16:58:01.061  INFO 47820 --- [http-nio-8090-exec-14] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 16:58:01.061  INFO 47820 --- [http-nio-8090-exec-14] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 16:58:01.065  INFO 47820 --- [http-nio-8090-exec-14] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2021-07-01 16:58:01.108  INFO 47820 --- [http-nio-8090-exec-16] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:01.108  INFO 47820 --- [http-nio-8090-exec-27] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:01.108  INFO 47820 --- [http-nio-8090-exec-11] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:01.108  INFO 47820 --- [http-nio-8090-exec-21] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:01.108  INFO 47820 --- [http-nio-8090-exec-12] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:01.210  INFO 47820 --- [http-nio-8090-exec-27] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 16:58:01.590  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 41
2021-07-01 16:58:01.590  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 41
2021-07-01 16:58:01.591  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 41
2021-07-01 16:58:01.591  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:58:01.591  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 16:58:01.597  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 16:58:01.598  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:58:01.598  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 16:58:01.614  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=330, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 16:58:01.621  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 16:58:01.806  INFO 47820 --- [http-nio-8090-exec-16] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2021-07-01 16:58:01.838  INFO 47820 --- [http-nio-8090-exec-16] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 16:58:01.848  INFO 47820 --- [http-nio-8090-exec-16] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 16:58:01.848  INFO 47820 --- [http-nio-8090-exec-16] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625129881838
2021-07-01 16:58:01.874  INFO 47820 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 16:58:01.970  INFO 47820 --- [http-nio-8090-exec-21] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:01.970  INFO 47820 --- [http-nio-8090-exec-11] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:01.970  INFO 47820 --- [http-nio-8090-exec-12] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:01.970  INFO 47820 --- [http-nio-8090-exec-27] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:01.975  INFO 47820 --- [http-nio-8090-exec-16] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:02.001  INFO 47820 --- [http-nio-8090-exec-180] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:02.001  INFO 47820 --- [http-nio-8090-exec-65] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:02.001  INFO 47820 --- [http-nio-8090-exec-173] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:02.002  INFO 47820 --- [http-nio-8090-exec-76] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:02.002  INFO 47820 --- [http-nio-8090-exec-131] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:02.003  INFO 47820 --- [http-nio-8090-exec-173] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:02.006  INFO 47820 --- [http-nio-8090-exec-65] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:02.014  INFO 47820 --- [http-nio-8090-exec-131] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:02.014  INFO 47820 --- [http-nio-8090-exec-180] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:02.018  INFO 47820 --- [http-nio-8090-exec-76] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:02.146  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:58:02.194  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:02.198  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:02.200  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:02.203  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:02.206  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:02.207  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:02.208  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:02.209  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:02.209  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:47.323  INFO 47820 --- [http-nio-8090-exec-195] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:47.325  INFO 47820 --- [http-nio-8090-exec-195] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:47.327  INFO 47820 --- [http-nio-8090-exec-125] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:47.327  INFO 47820 --- [http-nio-8090-exec-165] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:47.328  INFO 47820 --- [http-nio-8090-exec-165] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:47.329  INFO 47820 --- [http-nio-8090-exec-125] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:47.330  INFO 47820 --- [http-nio-8090-exec-18] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:47.331  INFO 47820 --- [http-nio-8090-exec-71] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:47.331  INFO 47820 --- [http-nio-8090-exec-18] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:47.332  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:58:47.332  INFO 47820 --- [http-nio-8090-exec-71] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:47.377  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:47.378  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:47.381  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:58:47.434  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:48.000  INFO 47820 --- [http-nio-8090-exec-111] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:48.000  INFO 47820 --- [http-nio-8090-exec-181] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:48.000  INFO 47820 --- [http-nio-8090-exec-180] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:48.001  INFO 47820 --- [http-nio-8090-exec-111] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:48.001  INFO 47820 --- [http-nio-8090-exec-180] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:48.001  INFO 47820 --- [http-nio-8090-exec-181] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:48.002  INFO 47820 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:48.002  INFO 47820 --- [http-nio-8090-exec-79] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 16:58:48.004  INFO 47820 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:48.004  INFO 47820 --- [http-nio-8090-exec-79] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 16:58:48.007  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 16:58:48.035  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:48.036  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:48.039  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 16:58:48.040  INFO 47820 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:订单跟新失败!
2021-07-01 17:02:28.480  INFO 17060 --- [main] com.lyf.SecondsKillDemoApplication       : Starting SecondsKillDemoApplication on wh-code-pc0283 with PID 17060 (D:\bs\github\seconds-kill-demo\target\classes started by yinfei.liao in D:\bs\github\seconds-kill-demo)
2021-07-01 17:02:28.482  INFO 17060 --- [main] com.lyf.SecondsKillDemoApplication       : No active profile set, falling back to default profiles: default
2021-07-01 17:02:28.858  INFO 17060 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-01 17:02:28.859  INFO 17060 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-01 17:02:28.871  INFO 17060 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2021-07-01 17:02:29.148  INFO 17060 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2021-07-01 17:02:29.153  INFO 17060 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-01 17:02:29.153  INFO 17060 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.33]
2021-07-01 17:02:29.200  INFO 17060 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-01 17:02:29.200  INFO 17060 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 687 ms
2021-07-01 17:02:29.475  INFO 17060 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-01 17:02:29.731  INFO 17060 --- [main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = default
	client.id = 
	connections.max.idle.ms = 300000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 120000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-07-01 17:02:29.757  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 17:02:29.757  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 17:02:29.757  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625130149756
2021-07-01 17:02:29.848  INFO 17060 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 17:02:29.862  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 17:02:29.862  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 17:02:29.862  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625130149862
2021-07-01 17:02:29.863  INFO 17060 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-1, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 17:02:29.864  INFO 17060 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 17:02:29.866  INFO 17060 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 17:02:29.870  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 17:02:29.870  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 17:02:29.870  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625130149870
2021-07-01 17:02:29.870  INFO 17060 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-2, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 17:02:29.870  INFO 17060 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 17:02:29.871  INFO 17060 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = seconds-kill
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2021-07-01 17:02:29.874  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-1, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 17:02:29.874  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-2, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 17:02:29.874  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 17:02:29.875  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 17:02:29.875  INFO 17060 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625130149874
2021-07-01 17:02:29.875  INFO 17060 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-3, groupId=seconds-kill] Subscribed to topic(s): SECONDS-KILL-TOPIC
2021-07-01 17:02:29.875  INFO 17060 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService
2021-07-01 17:02:29.875  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 17:02:29.875  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 17:02:29.876  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 17:02:29.876  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 17:02:29.876  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 17:02:29.876  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 17:02:29.876  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 17:02:29.876  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 17:02:29.878  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-3, groupId=seconds-kill] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 17:02:29.878  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Discovered group coordinator wh-code-pc0283.fn.com:9092 (id: 2147483647 rack: null)
2021-07-01 17:02:29.878  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Revoking previously assigned partitions []
2021-07-01 17:02:29.878  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions revoked: []
2021-07-01 17:02:29.878  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 17:02:29.881  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] (Re-)joining group
2021-07-01 17:02:29.881  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] (Re-)joining group
2021-07-01 17:02:29.881  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] (Re-)joining group
2021-07-01 17:02:29.890  INFO 17060 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2021-07-01 17:02:29.891  INFO 17060 --- [main] com.lyf.SecondsKillDemoApplication       : Started SecondsKillDemoApplication in 1.636 seconds (JVM running for 2.003)
2021-07-01 17:02:35.646  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Successfully joined group with generation 42
2021-07-01 17:02:35.646  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Successfully joined group with generation 42
2021-07-01 17:02:35.646  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.AbstractCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Successfully joined group with generation 42
2021-07-01 17:02:35.646  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-2, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 17:02:35.646  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-3, groupId=seconds-kill] Setting newly assigned partitions: 
2021-07-01 17:02:35.647  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 17:02:35.647  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: []
2021-07-01 17:02:35.648  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting newly assigned partitions: SECONDS-KILL-TOPIC-0
2021-07-01 17:02:35.651  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-1, groupId=seconds-kill] Setting offset for partition SECONDS-KILL-TOPIC-0 to the committed offset FetchPosition{offset=350, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=wh-code-pc0283.fn.com:9092 (id: 0 rack: null), epoch=0}}
2021-07-01 17:02:35.654  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : seconds-kill: partitions assigned: [SECONDS-KILL-TOPIC-0]
2021-07-01 17:03:11.895  INFO 17060 --- [http-nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-01 17:03:11.895  INFO 17060 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-01 17:03:11.898  INFO 17060 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2021-07-01 17:03:11.936  INFO 17060 --- [http-nio-8090-exec-15] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:11.936  INFO 17060 --- [http-nio-8090-exec-11] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:11.936  INFO 17060 --- [http-nio-8090-exec-3] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:11.936  INFO 17060 --- [http-nio-8090-exec-19] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:11.936  INFO 17060 --- [http-nio-8090-exec-8] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:12.001  INFO 17060 --- [http-nio-8090-exec-39] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:12.001  INFO 17060 --- [http-nio-8090-exec-17] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:12.001  INFO 17060 --- [http-nio-8090-exec-31] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:12.001  INFO 17060 --- [http-nio-8090-exec-16] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:12.001  INFO 17060 --- [http-nio-8090-exec-18] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:03:12.045  INFO 17060 --- [http-nio-8090-exec-11] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-01 17:03:12.603  INFO 17060 --- [http-nio-8090-exec-8] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = default
	client.id = 
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2021-07-01 17:03:12.660  INFO 17060 --- [http-nio-8090-exec-8] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 2.3.1
2021-07-01 17:03:12.660  INFO 17060 --- [http-nio-8090-exec-8] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 18a913733fb71c01
2021-07-01 17:03:12.661  INFO 17060 --- [http-nio-8090-exec-8] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1625130192660
2021-07-01 17:03:12.676  INFO 17060 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: ecMzevHKT1KwgG9BMtRtSw
2021-07-01 17:03:12.700  INFO 17060 --- [http-nio-8090-exec-16] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.700  INFO 17060 --- [http-nio-8090-exec-15] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.700  INFO 17060 --- [http-nio-8090-exec-39] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.701  INFO 17060 --- [http-nio-8090-exec-3] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.701  INFO 17060 --- [http-nio-8090-exec-19] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.701  INFO 17060 --- [http-nio-8090-exec-17] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.702  INFO 17060 --- [http-nio-8090-exec-8] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.702  INFO 17060 --- [http-nio-8090-exec-31] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.712  INFO 17060 --- [http-nio-8090-exec-18] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.713  INFO 17060 --- [http-nio-8090-exec-11] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:03:12.787  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:03:12.830  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:03:12.831  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:03:12.832  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:03:12.833  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:03:12.835  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:03:12.836  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:03:12.837  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:03:12.839  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:03:12.839  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:09:21.719  INFO 17060 --- [http-nio-8090-exec-20] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:21.722  INFO 17060 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:21.724  INFO 17060 --- [http-nio-8090-exec-92] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:21.727  INFO 17060 --- [http-nio-8090-exec-86] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:21.730 ERROR 17060 --- [http-nio-8090-exec-92] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 369020
2021-07-01 17:09:21.730 ERROR 17060 --- [http-nio-8090-exec-2] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 369009
2021-07-01 17:09:21.730 ERROR 17060 --- [http-nio-8090-exec-2] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 369027
2021-07-01 17:09:21.730 ERROR 17060 --- [http-nio-8090-exec-92] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 369027
2021-07-01 17:09:21.731 ERROR 17060 --- [http-nio-8090-exec-2] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 369028
2021-07-01 17:09:21.731 ERROR 17060 --- [http-nio-8090-exec-92] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 369028
2021-07-01 17:09:21.731 ERROR 17060 --- [http-nio-8090-exec-20] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 368883
2021-07-01 17:09:21.731  INFO 17060 --- [http-nio-8090-exec-62] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:21.732 ERROR 17060 --- [http-nio-8090-exec-86] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 369023
2021-07-01 17:09:21.735  INFO 17060 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:21.736  INFO 17060 --- [http-nio-8090-exec-92] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:21.739  INFO 17060 --- [http-nio-8090-exec-20] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:21.740  INFO 17060 --- [http-nio-8090-exec-62] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:21.740  INFO 17060 --- [http-nio-8090-exec-86] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:21.745  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:09:21.791  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:09:21.793  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:09:21.794  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:09:21.795  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:09:22.001  INFO 17060 --- [http-nio-8090-exec-110] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:22.001  INFO 17060 --- [http-nio-8090-exec-83] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:22.001  INFO 17060 --- [http-nio-8090-exec-2] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:22.002  INFO 17060 --- [http-nio-8090-exec-92] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:22.003  INFO 17060 --- [http-nio-8090-exec-83] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:22.003  INFO 17060 --- [http-nio-8090-exec-2] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:22.003  INFO 17060 --- [http-nio-8090-exec-110] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:22.004  INFO 17060 --- [http-nio-8090-exec-92] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:22.004  INFO 17060 --- [http-nio-8090-exec-106] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:09:22.005  INFO 17060 --- [http-nio-8090-exec-106] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:09:22.029  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:09:22.053  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:09:22.055  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:09:22.066  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:09:22.067  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:41.935  INFO 17060 --- [http-nio-8090-exec-109] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:41.935 ERROR 17060 --- [http-nio-8090-exec-109] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 319868
2021-07-01 17:14:41.935 ERROR 17060 --- [http-nio-8090-exec-109] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 319929
2021-07-01 17:14:41.936 ERROR 17060 --- [http-nio-8090-exec-109] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 319931
2021-07-01 17:14:41.936 ERROR 17060 --- [http-nio-8090-exec-109] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, jdbcUrl : jdbc:mysql://localhost:3306/lyf?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, lastPacketReceivedIdleMillis : 319933
2021-07-01 17:14:41.940  INFO 17060 --- [http-nio-8090-exec-109] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:41.940  INFO 17060 --- [http-nio-8090-exec-62] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:41.941  INFO 17060 --- [http-nio-8090-exec-62] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:41.941  INFO 17060 --- [http-nio-8090-exec-103] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:41.942  INFO 17060 --- [http-nio-8090-exec-103] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:41.942  INFO 17060 --- [http-nio-8090-exec-12] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:41.943  INFO 17060 --- [http-nio-8090-exec-20] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:41.945  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:14:41.946  INFO 17060 --- [http-nio-8090-exec-12] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:41.947  INFO 17060 --- [http-nio-8090-exec-20] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:42.000  INFO 17060 --- [http-nio-8090-exec-20] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:42.001  INFO 17060 --- [http-nio-8090-exec-20] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:42.001  INFO 17060 --- [http-nio-8090-exec-83] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:42.002  INFO 17060 --- [http-nio-8090-exec-83] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:42.003  INFO 17060 --- [http-nio-8090-exec-103] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:42.003  INFO 17060 --- [http-nio-8090-exec-103] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:42.004  INFO 17060 --- [http-nio-8090-exec-109] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:42.004  INFO 17060 --- [http-nio-8090-exec-86] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:42.004  INFO 17060 --- [http-nio-8090-exec-109] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:42.005  INFO 17060 --- [http-nio-8090-exec-86] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:42.018  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:42.019  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:42.021  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:14:42.067  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:42.069  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:42.071  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:42.073  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:42.074  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:42.075  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:43.000  INFO 17060 --- [http-nio-8090-exec-106] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:43.000  INFO 17060 --- [http-nio-8090-exec-106] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:43.001  INFO 17060 --- [http-nio-8090-exec-86] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:43.001  INFO 17060 --- [http-nio-8090-exec-86] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:43.002  INFO 17060 --- [http-nio-8090-exec-20] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:43.003  INFO 17060 --- [http-nio-8090-exec-62] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:43.003  INFO 17060 --- [http-nio-8090-exec-20] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:43.003  INFO 17060 --- [http-nio-8090-exec-62] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:43.004  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:14:43.004  INFO 17060 --- [http-nio-8090-exec-12] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:43.005  INFO 17060 --- [http-nio-8090-exec-12] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:43.082  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:43.083  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:43.084  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:43.086  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:14:44.000  INFO 17060 --- [http-nio-8090-exec-92] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:44.000  INFO 17060 --- [http-nio-8090-exec-92] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:44.001  INFO 17060 --- [http-nio-8090-exec-83] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:44.001  INFO 17060 --- [http-nio-8090-exec-83] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:44.002  INFO 17060 --- [http-nio-8090-exec-109] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:44.003  INFO 17060 --- [http-nio-8090-exec-109] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:44.003  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:14:44.004  INFO 17060 --- [http-nio-8090-exec-103] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:44.005  INFO 17060 --- [http-nio-8090-exec-103] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:44.006  INFO 17060 --- [http-nio-8090-exec-106] com.lyf.common.RedisLimit                : 成功获取令牌
2021-07-01 17:14:44.007  INFO 17060 --- [http-nio-8090-exec-106] c.lyf.service.imp.StockOrderServiceImpl  : 消息发送至 Kafka 成功
2021-07-01 17:14:44.043  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:44.044  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.lyf.service.imp.StockOrderServiceImpl  : Kafka 消费 Topic 创建订单成功
2021-07-01 17:14:44.072  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
2021-07-01 17:14:44.073  INFO 17060 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.l.kafka.customer.ConsumerOrderListen   : kafka消费:乐观锁版本不一致:订单跟新失败!
